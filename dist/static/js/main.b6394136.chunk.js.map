{"version":3,"sources":["components/layout/SignInLink.js","store/actions/authActions.js","components/layout/SignOutLink.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","components/dashboard/Profile.js","errPageNotFound.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","serviceWorker.js","index.js"],"names":["compose","firebaseConnect","connect","dispatch","props","signOut","getState","firebase","auth","then","logout","type","react_default","a","createElement","className","react_router_dom","to","onClick","uid","profile","initials","SignOutLink","state","link","isLoaded","layout_SignInLink","layout_SignOutLink","ProjectSummary","_ref","project","title","authFirstName","authLastName","moment","createAt","toDate","calendar","ProjectList","projects","map","id","key","projects_ProjectSummary","Notifications","notifications","item","user","content","time","fromNow","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","deleteProject","doc","delete","catch","err","authId","history","push","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","authErr","required","withFirestore","newUser","createUserWithEmailAndPassword","res","set","CreateProject","createProject","add","objectSpread","Date","profile_id","filter","length","errPageNotFound","App","layout_Navbar","exact","path","component","ProjectDetails","Profile","initState","authReducer","arguments","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","rrfProps","userProfile","attachAuthIsReady","firebaseStateName","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","es","react_redux_firebase_es","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b6394136.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firebaseConnect } from 'react-redux-firebase'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignInLink = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><NavLink to='/signIn' onClick={props.signOut}>Log Out</NavLink></li>\n            <li><NavLink to={'/profile/'+props.auth.uid} className='btn btn-floating pink lighten-1'>\n            {props.profile.initials}\n            </NavLink></li>\n        </ul>\n    );\n};\n\nconst mapDispathToProps = (dispatch, props) =>{\n    return{\n        signOut: () => dispatch(signOut(props))\n    }\n}\n\nexport default compose(firebaseConnect(), connect(null,mapDispathToProps))(SignInLink);","export const signIn = (credentials, props) => {\n  return (dispatch, getState) => {\n    props.firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"LOGIN_ERROR\" }, err);\n      });\n  };\n};\n\nexport const signOut = props => {\n  return (dispatch, getState) => {\n    props.firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        props.firebase.logout();\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = (newUser, props) => {\n  return (dispatch, getState) => {\n    props.firebase.auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(res => {\n        props.firestore\n          .collection(\"users\")\n          .doc(res.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom'\n\nconst SignOutLink = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    );\n};\n\nexport default SignOutLink;","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport SignInLink from './SignInLink'\nimport SignOutLink from './SignOutLink'\nimport {connect} from 'react-redux'\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    let link = '';\n    if(auth.isLoaded){\n        link = auth.uid ? <SignInLink auth={auth} profile={profile}/> : <SignOutLink />\n    }\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">Home</Link>\n                {link}                \n            </div>\n        </nav>\n    );\n};\nconst mapStateToProps = (state) => {\n    return{\n      auth: state.firebase.auth,\n      profile: state.firebase.profile\n    }\n  }\n  \n  export default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment  from 'moment'\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title \">{ project.title }</span>\n        <p>Post by { project.authFirstName } { project.authLastName }</p>\n        <p className=\"grey-text\">{ moment(project.createAt.toDate()).calendar() }</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map(project => {\n          return (\n            <Link to={'/project/'+project.id}  key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React from \"react\";\nimport moment from 'moment'\n\nconst Notifications = ({ notifications }) => {\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            {notifications &&\n              notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"note-date grey-text\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React, { Component } from \"react\";\nimport ProjectList from \"../projects/ProjectList\";\nimport Notifications from \"./Notifications\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  \n  render() {\n    const { auth, notifications, projects } = this.props;\n    if(!auth.isLoaded){\n      return <div className=\"center red-text\">Loading...</div>\n    }\n    if(!auth.uid) return <Redirect to={'/signin'} />\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: [\"createAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 4, orderBy: [\"time\", \"desc\"] }\n  ])\n)(Dashboard);","import React from \"react\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { deleteProject } from '../../store/actions/projectActions'\nimport moment from \"moment\";\n\nconst ProjectDetails = props => {\n  const id = props.match.params.id;\n  const { project, auth } = props;\n  const delProject = () => {\n    props.deleteProject(id, props);\n    props.history.push('/');\n  }\n  if (!auth.isLoaded) return null;\n  if (!auth.uid) return <Redirect to={\"/signin\"} />;\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">Project title - {project.title}</span>\n            <p>{project.content}</p>\n            {auth.uid === project.authId ? (<button className=\"btn pink lighten-1 z-depth-0\" onClick={delProject}>Delete</button>) : null}\n          </div>\n\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>\n              Posted by {project.authFirstName} {project.authLastName}\n            </div>\n            <div>{moment(project.createAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return{\n    deleteProject: id => dispatch(deleteProject(id, props))\n  }\n}\n\nexport default compose(\n  firestoreConnect([\"projects\"]),\n  connect(mapStateToProps,mapDispatchToProps)\n)(ProjectDetails);\n","export const createProject = (project, ownProps) => {\n  return (dispatch, getState) => {\n    // asyn code to call to database\n    const profile = getState().firebase.profile;\n    const authId = getState().firebase.auth.uid;\n    ownProps.firestore.collection(\"projects\")\n      .add({\n        ...project,\n        authFirstName: profile.firstName,\n        authLastName: profile.lastName,\n        authId,\n        createAt: new Date()\n      })\n      .then(() => dispatch({ type: \"CREATE_PROJECT\", project }))\n      .catch(err => {\n        dispatch({ type: \"CREATE_PROJECT_FAILED\", err });\n      });\n  };\n};\n\nexport const deleteProject = (id, ownProps) => {\n  return (dispatch, getState) => {\n    // asyn code to call to database\n    // const authId = getState().firebase.auth.uid;\n    ownProps.firestore.collection(\"projects\").doc(id).delete()\n      .then(() => dispatch({ type: \"DELETE_PROJECT\" }))\n      .catch(err => {\n        dispatch({ type: \"DELETE_PROJECT_FAILED\", err });\n      });\n  };\n};","import React, { Component } from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  };\n  render() {\n    const {authError, auth} = this.props;\n    if(auth.uid) return <Redirect to={'/'} />\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n          </div>\n          <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError : state.auth.authError,\n    auth : state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    signIn : (creds) => dispatch(signIn(creds, props))\n  };\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps,mapDispatchToProps)\n)(SignIn);\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom'\nimport { signUp } from '../../store/actions/authActions'\nimport { compose } from 'redux'\nimport { withFirestore, firebaseConnect } from 'react-redux-firebase'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const {auth, authErr} = this.props;\n    if(auth.uid) return <Redirect to={'/'} />\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\" >First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} required />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} required />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n          </div>\n          <div className=\"red-text center\">\n            { authErr ? <p>{ authErr }</p> : null}\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    auth : state.firebase.auth,\n    authErr : state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    signUp : newUser => dispatch(signUp(newUser, props))\n  }\n}\n\nexport default compose(firebaseConnect(),  withFirestore, connect(mapStateToProps, mapDispatchToProps))(SignUp)","import React, { Component } from 'react'\nimport { createProject } from '../../store/actions/projectActions'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { withFirestore } from 'react-redux-firebase'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if(!auth.isLoaded){\n      return <div className=\"center red-text\">Loading...</div>\n    }\n    if(!auth.uid) return <Redirect to={'/signin'} />\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id='title' onChange={this.handleChange} required/>\n            <label htmlFor=\"title\">Project Title</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} required></textarea>\n            <label htmlFor=\"content\">Project Content</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth : state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    createProject : project => dispatch(createProject(project, ownProps))\n  }\n}\n\nexport default compose(withFirestore, connect(mapStateToProps, mapDispatchToProps))(CreateProject)","import React from \"react\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Link, Redirect } from \"react-router-dom\";\nconst Profile = props => {\n  const id = props.match.params.profile_id;\n  if (!props.auth.isLoaded) return null;\n  if (!props.auth.uid) return <Redirect to={\"/signin\"} />;\n  if (props.projects) {\n    let projects = props.projects.filter(project => project.authId === id);\n    if (projects.length) {\n      return (\n        <div className=\"profile container\">\n          <ProjectList projects={projects} />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"profile container center\">\n          <span>\n            You don't have any project yet. Click <Link to=\"/create\">Here</Link>{\" \"}\n            to create new projects\n          </span>\n        </div>\n      );\n    }\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\", orderBy: [\"createAt\", \"desc\"] }])\n)(Profile);\n","import React, { Component } from 'react'\n\nexport default class errPageNotFound extends Component {\n    render() {\n        return (\n            <div>\n                Page don't exist\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\nimport Profile from './components/dashboard/Profile'\nimport errPageNotFound from \"./errPageNotFound\"\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route exact path='/project/:id' component={ProjectDetails} />\n            <Route exact path='/profile/:profile_id' component={Profile} />\n            <Route exact path='/signin' component={SignIn} />\n            <Route exact path='/signup' component={SignUp} />\n            <Route exact path='/create' component={CreateProject} />\n            <Route component={errPageNotFound} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      console.log(\"sign in success\");\n      return {\n        ...state,\n        authError: null\n      };\n\n    case \"LOGIN_ERROR\":\n      return {\n        ...state,\n        authError: \"Login failed\"\n      };\n\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"sign out\");\n      return state;\n\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null\n      };\n\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup error\");\n      return {\n        ...state,\n        authError: action.err.message\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: []\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"Create project success\");\n      return state;\n    case \"CREATE_PROJECT_FAILED\":\n      console.log(\"Create project error \", action.err);\n      return state;\n    case \"DELETE_PROJECT\":\n      console.log(\"Delete project success\");\n      return state;\n    case \"DELELTE_PROJECT_FAILED\":\n      console.log(\"Delete project error \", action.err);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth : authReducer,\n    project : projectReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n});\n\nexport default rootReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport * as serviceWorker from './serviceWorker'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDmyBJRsB8Dz0bAD5_LdqkSZQWEaAmI4qo\",\n  authDomain: \"react-project-29153.firebaseapp.com\",\n  databaseURL: \"https://react-project-29153.firebaseio.com\",\n  projectId: \"react-project-29153\",\n  storageBucket: \"\",\n  messagingSenderId: \"450290476751\",\n  appId: \"1:450290476751:web:6f30bc4b01e9e7d9\"\n};\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  attachAuthIsReady: true,\n  firebaseStateName: \"firebase\",\n  useFirestoreForProfile: true\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\nconst store = createStore(\n  rootReducer, applyMiddleware(thunk)\n);\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.register();"],"sourceRoot":""}